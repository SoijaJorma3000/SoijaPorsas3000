<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ukkeli</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.image_speed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var newX = x
var newY = y

if (keyboard_check(vk_up))
{
    newY = y - 1;
}
if (keyboard_check(vk_down))
{
    newY = y + 1;
}
if (keyboard_check(vk_left))
{
    newX = x - 1;
}
if (keyboard_check(vk_right))
{
    newX = x + 1;
}

if(place_free(newX, newY))
{
    x = newX;
    y = newY;
}
/*
else
{
    speed = 0;
}
*/

if(mouse_x &lt; newX)
{
    self.image_xscale = -1;
}
else
{
    self.image_xscale = 1;
}

//image_angle = point_direction(x,y,mouse_x,mouse_y)

if(mouse_check_button_pressed(mb_any))
{
    if(global.player1.attackweapon.cooldownLeft == 0)
    {
        global.player1.attackweapon.cooldownLeft = global.player1.attackweapon.cooldown;
        global.player1.attackweapon.visible = true;
        global.player1.attackweapon.animLeft = global.player1.attackweapon.animLength;
    }
}

if(global.player1.attackweapon.cooldownLeft &gt; 0)
{
    global.player1.attackweapon.cooldownLeft -= 1;
    if(global.player1.attackweapon.animLeft &gt; 0)
    {
        global.player1.attackweapon.animLeft -= 1;
        if(global.player1.attackweapon.animLeft == 0)
        {
            global.player1.attackweapon.visible = false;
        }
    }

    if(global.player1.attackweapon.animLeft &gt; 0)
    {
        with(global.player1.attackweapon)
        {
            x = newX;
            y = newY;
            
            var animspeed = 110 / self.animLength;
            
            image_angle = point_direction(x,y,mouse_x,mouse_y) - 110/2 + animspeed * self.animLeft;
            var len = sqrt(sqr(mouse_x - x) + sqr(mouse_y - y))
//          x = x + 32 * (mouse_x - x) / len
//          y = y + 32 * (mouse_y - y) / len
            x = x + 32 * dsin(image_angle + 90);
            y = y + 32 * dcos(image_angle + 90);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
